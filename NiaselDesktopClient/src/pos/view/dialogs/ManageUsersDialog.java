/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pos.view.dialogs;

import java.awt.Frame;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRTableModelDataSource;
import net.sf.jasperreports.view.JasperViewer;
import pos.App;
import pos.controller.ManageUsersController;
import pos.exception.InstanceNotFoundException;
import pos.model.User;

/**
 *
 * @author rulfa
 */
public class ManageUsersDialog extends javax.swing.JDialog {

    private final ManageUsersController controller = new ManageUsersController();

    /**
     * Creates new form ManageUsersDialog
     *
     * @param owner Usually JFrame
     */
    public ManageUsersDialog(Frame owner) {
        super(owner, true);
        initComponents();
        controller.loadUsers(jTable1.getModel());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        newUserButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        manageRoleButton = new javax.swing.JButton();
        PrintButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Manage Users");
        setResizable(false);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Full Name", "Role", "Status", "Last Update", "Created", "ID (hidden)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        DefaultTableCellRenderer centerHeaderRenderer = (DefaultTableCellRenderer) jTable1.getTableHeader().getDefaultRenderer();
        centerHeaderRenderer.setHorizontalAlignment(JLabel.CENTER);

        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);

        TableColumnModel tableColumn = jTable1.getColumnModel();
        jTable1.removeColumn(tableColumn.getColumn(6));

        TableColumn indexColumn = tableColumn.getColumn(0);
        indexColumn.setCellRenderer(centerRenderer);
        indexColumn.setPreferredWidth(5);

        TableColumn roleColumn = tableColumn.getColumn(2);
        roleColumn.setCellRenderer(centerRenderer);

        TableColumn statusColumn = tableColumn.getColumn(3);
        statusColumn.setCellRenderer(centerRenderer);

        TableColumn lastUpdateColumn = tableColumn.getColumn(4);
        lastUpdateColumn.setCellRenderer(centerRenderer);

        TableColumn createdColumn = tableColumn.getColumn(5);
        createdColumn.setCellRenderer(centerRenderer);
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable1.setFillsViewportHeight(true);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.getModel().addTableModelListener(evt -> {
            try {
                User user = App.getInstance().getAuthController().getCurrentUser().orElseThrow();

                newUserButton.setEnabled(user.getRole().getIsCanCreateUpdateUser());
                manageRoleButton.setEnabled(user.getRole().getIsCanCreateUpdateUser());
            } catch (Exception ex) {
            }
        });
        jScrollPane1.setViewportView(jTable1);

        newUserButton.setText("New");
        newUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newUserButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel2.setText("MANAGE USERS");

        manageRoleButton.setText("Manage Role");
        manageRoleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageRoleButtonActionPerformed(evt);
            }
        });

        PrintButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/images/IconPrint1.png"))); // NOI18N
        PrintButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        PrintButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        PrintButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrintButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(PrintButton1)
                        .addGap(12, 12, 12)
                        .addComponent(manageRoleButton)
                        .addGap(12, 12, 12)
                        .addComponent(newUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 616, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(newUserButton)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(manageRoleButton)
                    .addComponent(PrintButton1))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        JTable source = (JTable) evt.getSource();
        int row = source.rowAtPoint(evt.getPoint());
        long id = (long) source.getModel().getValueAt(row, 6);
        new UserDetailDialog(this, controller, id).setVisible(true);
        controller.loadUsers(jTable1.getModel());
    }//GEN-LAST:event_jTable1MouseClicked

    private void PrintButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrintButton1ActionPerformed
        try {
            User user = App.getInstance().getAuthController().getCurrentUser().orElseThrow();

            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            String jrxmlPath = "src/pos/report/ManageUser.jrxml";
            JasperReport jasperReport = JasperCompileManager.compileReport(jrxmlPath);

            // Param for title and description if need
            // Prepare parameters
            Map<String, Object> parameters = new HashMap<>();
            parameters.put("reporttitle", "PT Supra Boga LestariÂ Tbk");
            parameters.put("keterangan", "Jl. Pesanggrahan No.2, RT.1/RW.7, Kembangan Sel., Kec. Kembangan, Kota Jakarta Barat, Daerah Khusus Ibukota Jakarta 11610");
            parameters.put("author", user.getFullName());

            JasperPrint print = JasperFillManager.fillReport(jasperReport, parameters, new JRTableModelDataSource(model));
            JasperViewer jasperViewer = new JasperViewer(print, false);

            JDialog dialog = new JDialog(this);//the owner
            dialog.setContentPane(jasperViewer.getContentPane());
            dialog.setSize(jasperViewer.getSize());
            dialog.setTitle("User List Report");
            dialog.setVisible(true);
        } catch (JRException | InstanceNotFoundException ex) {
            Logger.getLogger(ManageUsersDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_PrintButton1ActionPerformed

    private void manageRoleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageRoleButtonActionPerformed
        ManageRolesDialog dialog = new ManageRolesDialog(this);
        dialog.setWhenComplete(t -> controller.loadUsers(jTable1.getModel(), t));
        dialog.setVisible(true);
    }//GEN-LAST:event_manageRoleButtonActionPerformed

    private void newUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newUserButtonActionPerformed
        new UserDetailDialog(this, controller, null).setVisible(true);
        controller.loadUsers(jTable1.getModel());
    }//GEN-LAST:event_newUserButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton PrintButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton manageRoleButton;
    private javax.swing.JButton newUserButton;
    // End of variables declaration//GEN-END:variables
}
